name: integration

on:
  pull_request:
    paths-ignore:
      # Do not trigger if docs changed
      - 'docs/**'

jobs:
  loki-docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        loki: [1.6.1, 3.0.0]
        include:
          - loki: 1.6.1
            limits: -distributor.ingestion-rate-limit-mb=160 -distributor.ingestion-burst-size-mb=240
          - loki: 3.0.0
            limits: |
              -distributor.ingestion-rate-limit-mb=160 -distributor.ingestion-burst-size-mb=240 \
              -ingester.per-stream-rate-limit="80MB" -ingester.per-stream-rate-limit-burst="160MB" \
              -server.grpc-max-recv-msg-size-bytes=4194304000 \
              -querier.frontend-client.grpc-max-send-msg-size=167772160 \
              -shard-streams.enabled=false
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 11
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Build and Run Integration Tests
        run: |
          docker run --name loki -d -p 3100:3100 grafana/loki:${{ matrix.loki }} \
            -config.file=/etc/loki/local-config.yaml \
            ${{ matrix.limits }}
          docker run --name lokimultitenant -d -p 3110:3100 grafana/loki:${{ matrix.loki }} \
            -config.file=/etc/loki/local-config.yaml -auth.enabled=true
          sleep 5s

          gradle -Dorg.gradle.jvmargs=-Xmx2G check integTests
          gradle ciOnlyTests --tests "*MultitenantSupportTest"

          docker stop loki
          docker stop lokimultitenant
      - name: Pring Log
        if: ${{ failure() }}
        run: |
          docker logs loki
          docker stop loki
          docker logs lokimultitenant
          docker stop lokimultitenant


  grafana-cloud:
    runs-on: ubuntu-latest
    environment: integ-tests
    strategy:
      matrix:
        jdk: [11, 21]
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.jdk }}
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Build and Run Integration Tests
        env:
          GRAFANA_CLOUD_URL_BASE: ${{ vars.GRAFANA_CLOUD_URL_BASE }}
          GRAFANA_CLOUD_USERNAME: ${{ secrets.GRAFANA_CLOUD_USERNAME }}
          GRAFANA_CLOUD_PASSWORD: ${{ secrets.GRAFANA_CLOUD_PASSWORD }}
          GRAFANA_CLOUD_EXTRA_LABEL: -JDK${{ matrix.jdk }}
        run: |
          gradle check
          gradle ciOnlyTests --tests "*GrafanaCloudTest"
