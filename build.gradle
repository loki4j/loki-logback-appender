plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id "com.google.protobuf" version "0.8.13"
}

group = "com.github.loki4j"
version = "0.0.2-SNAPSHOT"

repositories {
     mavenCentral()
}

dependencies {
    api 'ch.qos.logback:logback-classic:1.2.3'

    implementation 'com.google.protobuf:protobuf-java:3.12.4'

    testImplementation 'junit:junit:4.13'
}

java {
    withJavadocJar()
    withSourcesJar()
}

protobuf {
  protoc {
    artifact = 'com.google.protobuf:protoc:3.12.4'
  }
}

sourceSets.main.java.srcDirs += ['build/generated/source/proto/main/java']

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'loki-logback-appender'
            from components.java
            pom {
                name = 'Logback Appender for Loki'
                description = 'This project aims to be the fastest and the most lightweight implementation of Logback Appender for Loki'
                url = 'https://github.com/loki4j/loki-logback-appender'
                licenses {
                    license {
                        name = 'BSD Software License, 2-clause version'
                        url = 'https://github.com/loki4j/loki-logback-appender/blob/master/LICENSE.md'
                    }
                }
                developers {
                    developer {
                        id = 'nehaev'
                        name = 'Anton Nehaev'
                        email = "nehaev@gmail.com"
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com/loki4j/loki-logback-appender.git'
                    developerConnection = 'scm:git:git@github.com/loki4j/loki-logback-appender.git'
                    url = 'https://github.com/loki4j/loki-logback-appender'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                if (rootProject.hasProperty('ossrhUsername') && rootProject.hasProperty('ossrhPassword')) {
                    username = rootProject.ossrhUsername
                    password = rootProject.ossrhPassword
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
